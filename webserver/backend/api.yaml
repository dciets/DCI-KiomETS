openapi: 3.0.0
info:
  title: JDIS wish 2 API
  description: API for JDIS wish 2
  version: 1.0.0
servers:
    - url: http://localhost:8080
      description: Local server
tags:
  - name: User
    description: User operations
  - name: Scoreboard
    description: Scoreboard operations
  - name: Parameters
    description: Parameters operations
  - name: Game
    description: Game operations
paths:
  /api/user:
    get:
      tags:
        - User
      summary: Get user
      security:
        - auth: [admin,user]
      responses:
        200:
          description: OK

    post:
      tags:
        - User
      summary: Create user
      security: []
      parameters:
        - name: user
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/User'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /api/scoreboard:
    get:
      tags:
        - Scoreboard
      summary: Get scoreboard
      security:
        - auth: [admin, user]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scoreboard'

  /api/parameters/{id}:
    get:
      tags:
        - Parameters
      summary: Get parameters for User id
      security:
        - auth: [admin, user]
      parameters:
        - name: id
          in: path
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameters'
        404:
          description: User Not Found
        401:
          description: Unauthorized
        403:
            description: Forbidden
    put:
        tags:
            - Parameters
        summary: Update parameters for User id
        security:
            - auth: [admin, user]
        parameters:
            - name: id
              in: path
              required: true
            - name: parameters
              in: query
              required: true
              schema:
                $ref: '#/components/schemas/Parameters'
        responses:
            200:
              description: OK
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Parameters'
            404:
              description: User Not Found
            401:
              description: Unauthorized
            403:
                description: Forbidden
  /api/start:
    post:
      tags:
        - Game
      summary: Start game
      security:
        - auth: [admin]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: "Game started"
        401:
          description: Unauthorized
        403:
            description: Forbidden
        409:
            description: Game already started
  /api/stop:
    post:
      tags:
        - Game
      summary: Stop game
      security:
        - auth: [admin]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: "Game stopped"
        401:
          description: Unauthorized
        403:
            description: Forbidden
        409:
            description: Game not started
components:
  schemas:
    Scoreboard:
        type: object
        properties:
          id:
              type: integer
          name:
              type: string
          score:
              type: integer
    User:
        type: object
        properties:
          id:
              type: integer
          name:
              type: string
          email:
              type: string
    Parameters:
        type: object
        properties:
          map_length:
              type: integer
          soldier_speed:
              type: integer
          soldier_creation_speed:
              type: integer
          terrain_change_speed:
              type: integer
          game_length:
              type: integer
  securitySchemes:
    auth:
      type: http
      scheme: bearer
      bearerFormat: JWT